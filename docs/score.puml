@startuml

interface Observer {
+ update(TetrisBoard)
}

class TetrisBoard {
- notifyAll()
- onRowClear()
- observers: List[Observer]
+ addObserver(Observer)
+ removeObserver(Observer)
}

note right of TetrisBoard::onRowClear
calls notifyAll()
end note

abstract ScoreObserver {
+ getScore(): int
+ update(TetrisBoard)
}

class DefaultScoreObserver {
+ getScore(): int
+ update(TetrisBoard)
}

class ComboScoreObserver {
+ getScore(): int
+ update(TetrisBoard)
}

class GarbageGeneratorObserver {
+ update(TetrisBoard)
}

Observer <|.. ScoreObserver
TetrisBoard *--> Observer
ScoreObserver <|-- DefaultScoreObserver
ScoreObserver <|-- ComboScoreObserver
Observer <|.. GarbageGeneratorObserver

@enduml